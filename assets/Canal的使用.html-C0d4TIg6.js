import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as e}from"./app-2Nmlc3aW.js";const t={},p=e(`<h1 id="一、背景" tabindex="-1"><a class="header-anchor" href="#一、背景"><span>一、背景</span></a></h1><p>工作中有个需求，当数据库的数据变更时，另外一个系统中的数据要能及时感应到，通过调研知道，监听数据库的<code>binlog</code>可以做到一个准实时的通知，而<code>canal</code>主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费，正好满足需求，此处记录一下<code>canal</code>的简单使用。</p><h1 id="二、canal的工作原理" tabindex="-1"><a class="header-anchor" href="#二、canal的工作原理"><span>二、canal的工作原理</span></a></h1><p><img src="https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202208080239150.webp" alt="canal的工作原理"></p><p><strong>步骤：</strong></p><ol><li>canal模拟mysql slave的交互协议，伪装自己为mysql slave，向mysql master发送dump协议</li><li>mysql master收到dump请求，开始推送binary log给slave(也就是canal)</li><li>canal解析binary log对象(原始为byte流)</li></ol><h1 id="三、安装canal" tabindex="-1"><a class="header-anchor" href="#三、安装canal"><span>三、安装canal</span></a></h1><h2 id="_1、mysql配置相关" tabindex="-1"><a class="header-anchor" href="#_1、mysql配置相关"><span>1、mysql配置相关</span></a></h2><h3 id="_1、检测binlog是否开启" tabindex="-1"><a class="header-anchor" href="#_1、检测binlog是否开启"><span>1、检测binlog是否开启</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;log_bin&#39;</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------+-------+</span>
<span class="token operator">|</span> Variable_name <span class="token operator">|</span> <span class="token keyword">Value</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------+-------+</span>
<span class="token operator">|</span> log_bin       <span class="token operator">|</span> <span class="token keyword">ON</span>    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------+-------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>log_bin</code>的值为<code>ON</code>说明打开了。</p><h3 id="_2、mysql开启binlog" tabindex="-1"><a class="header-anchor" href="#_2、mysql开启binlog"><span>2、mysql开启binlog</span></a></h3><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span>
<span class="token comment">#binlog日志的基本文件名，需要注意的是启动mysql的用户需要对这个目录(/usr/local/var/mysql/binlog)有写入的权限</span>
<span class="token key attr-name">log_bin</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/var/mysql/binlog/mysql-bin</span>
<span class="token comment"># 配置binlog日志的格式</span>
<span class="token key attr-name">binlog_format</span> <span class="token punctuation">=</span> <span class="token value attr-value">ROW</span>
<span class="token comment"># 配置 MySQL replaction 需要定义，不能和 canal 的 slaveId 重复</span>
<span class="token key attr-name">server-id</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token comment"># 设置中继日志的路径</span>
<span class="token key attr-name">relay_log</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/var/mysql/relaylog/mysql-relay</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、创建canal用户" tabindex="-1"><a class="header-anchor" href="#_3、创建canal用户"><span>3、创建canal用户</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> canal IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;canal&#39;</span><span class="token punctuation">;</span>  
<span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span><span class="token punctuation">,</span> <span class="token keyword">REPLICATION</span> SLAVE<span class="token punctuation">,</span> <span class="token keyword">REPLICATION</span> CLIENT <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;canal&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- GRANT ALL PRIVILEGES ON *.* TO &#39;canal&#39;@&#39;%&#39; ;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、canal配置相关" tabindex="-1"><a class="header-anchor" href="#_2、canal配置相关"><span>2、canal配置相关</span></a></h2><h3 id="_1、下载canal" tabindex="-1"><a class="header-anchor" href="#_1、下载canal"><span>1、下载canal</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token comment"># 1.下载 deployer</span>
 $ <span class="token function">wget</span> https://github.com/alibaba/canal/releases/download/canal-1.1.5/canal.deployer-1.1.5.tar.gz
 <span class="token comment"># 下载适配器，不是必须的</span>
 $ <span class="token function">wget</span> https://github.com/alibaba/canal/releases/download/canal-1.1.5/canal.adapter-1.1.5.tar.gz 
 <span class="token comment"># 下载管理台，不是必须的</span>
 $ <span class="token function">wget</span> https://github.com/alibaba/canal/releases/download/canal-1.1.5/canal.admin-1.1.5.tar.gz
 <span class="token comment"># 下载示例程序</span>
 $ <span class="token function">wget</span> https://github.com/alibaba/canal/releases/download/canal-1.1.5/canal.example-1.1.5.tar.gz
 
 <span class="token comment"># 2.解压 deployer (解压后的目录要存在)</span>
 <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> canal.deployer-1.1.5.tar.gz <span class="token parameter variable">-C</span> /Users/huan/soft/canal/deployer/
 
 <span class="token comment"># 3. 查看 conf 目录结构</span>
 $ tree conf                  
 conf
 ├── canal.properties
 ├── canal_local.properties
 ├── example
 │   └── instance.properties
 ├── logback.xml
 ├── metrics
 │   └── Canal_instances_tmpl.json
 └── spring
    ├── base-instance.xml
    ├── default-instance.xml
    ├── file-instance.xml
    ├── group-instance.xml
    ├── memory-instance.xml
    └── tsdb
        ├── h2-tsdb.xml
        ├── mysql-tsdb.xml
        ├── sql
        │   └── create_table.sql
        └── sql-map
            ├── sqlmap-config.xml
            ├── sqlmap_history.xml
            └── sqlmap_snapshot.xml

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、配置一个instance" tabindex="-1"><a class="header-anchor" href="#_2、配置一个instance"><span>2、配置一个instance</span></a></h3><p><code>instance</code>：一个<code>instance</code>就是一个消息队列，每个instance通道都有各自的一份配置，因为每个mysql的ip，帐号，密码等信息各不相同。</p><p>一个<code>canal server</code>可以存在多个<code>instance</code>。</p><h4 id="_1、复制conf-example文件夹" tabindex="-1"><a class="header-anchor" href="#_1、复制conf-example文件夹"><span>1、复制<code>conf/example</code>文件夹</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> conf/example conf/customer

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>customer</code>可以简单理解为此处我需要链接<code>customer</code>数据库，因此命名为这个。</p><h4 id="_2、修改instance的配置" tabindex="-1"><a class="header-anchor" href="#_2、修改instance的配置"><span>2、修改instance的配置</span></a></h4><p><strong>vim conf/customer/instance.properties</strong></p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># mysql集群配置中的serverId概念，需要保证和当前mysql集群中id唯一 (v1.1.x版本之后canal会自动生成，不需要手工指定)</span>
<span class="token comment"># canal.instance.mysql.slaveId=0</span>
<span class="token comment"># mysql主库链接地址</span>
<span class="token key attr-name">canal.instance.master.address</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:3306</span>
<span class="token comment"># mysql主库链接时起始的binlog文件</span>
<span class="token key attr-name">canal.instance.master.journal.name</span><span class="token punctuation">=</span>
<span class="token comment"># mysql主库链接时起始的binlog偏移量</span>
<span class="token key attr-name">canal.instance.master.position</span><span class="token punctuation">=</span>
<span class="token comment"># mysql主库链接时起始的binlog的时间戳</span>
<span class="token key attr-name">canal.instance.master.timestamp</span><span class="token punctuation">=</span>

<span class="token comment"># mysql数据库帐号(此处的用户名和密码为 安装canal#mysql配置相关#创建canal用户 这一步创建的用户名和密码)</span>
<span class="token key attr-name">canal.instance.dbUsername</span><span class="token punctuation">=</span><span class="token value attr-value">canal</span>
<span class="token comment"># mysql数据库密码</span>
<span class="token key attr-name">canal.instance.dbPassword</span><span class="token punctuation">=</span><span class="token value attr-value">canal</span>
<span class="token comment"># mysql 数据解析编码</span>
<span class="token key attr-name">canal.instance.connectionCharset</span> <span class="token punctuation">=</span> <span class="token value attr-value">UTF-8</span>

<span class="token comment"># mysql 数据解析关注的表，Perl正则表达式，即我们需要关注那些库和那些表的binlog数据，也可以在canal client api中手动覆盖</span>
<span class="token key attr-name">canal.instance.filter.regex</span><span class="token punctuation">=</span><span class="token value attr-value">.*\\\\..*</span>
<span class="token comment"># table black regex</span>
<span class="token comment"># mysql 数据解析表的黑名单，表达式规则见白名单的规则</span>
<span class="token key attr-name">canal.instance.filter.black.regex</span><span class="token punctuation">=</span><span class="token value attr-value">mysql\\\\.slave_.*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、instance注意事项" tabindex="-1"><a class="header-anchor" href="#_3、instance注意事项"><span>3、instance注意事项</span></a></h4><h5 id="_1、配置需要关注那个库和那个表的binlog" tabindex="-1"><a class="header-anchor" href="#_1、配置需要关注那个库和那个表的binlog"><span>1、配置需要关注那个库和那个表的binlog</span></a></h5><p>修改 <code>instance.properties</code>文件的这个属性<code>canal.instance.filter.regex</code>,规则如下：</p><ol><li>所有表：.* or .<em>\\..</em></li><li>canal schema下所有表： canal\\..*</li><li>canal下的以canal打头的表：canal\\.canal.*</li><li>canal schema下的一张表：canal\\.test1</li><li>多个规则组合使用：canal\\..*,mysql.test1,mysql.test2 (逗号分隔)</li></ol><h5 id="_2、mysql链接时的起始位置" tabindex="-1"><a class="header-anchor" href="#_2、mysql链接时的起始位置"><span>2、mysql链接时的起始位置</span></a></h5><ul><li>canal.instance.master.journal.name + canal.instance.master.position : 精确指定一个binlog位点，进行启动</li><li>canal.instance.master.timestamp : 指定一个时间戳，canal会自动遍历mysql binlog，找到对应时间戳的binlog位点后，进行启动</li><li>不指定任何信息：默认从当前数据库的位点，进行启动。(show master status)</li></ul><h5 id="_3、mysql解析关注表定义" tabindex="-1"><a class="header-anchor" href="#_3、mysql解析关注表定义"><span>3、mysql解析关注表定义</span></a></h5><ul><li>标准的Perl正则，注意转义时需要双斜杠：\\</li></ul><h5 id="_4、mysql链接的编码" tabindex="-1"><a class="header-anchor" href="#_4、mysql链接的编码"><span>4、mysql链接的编码</span></a></h5><ul><li><code>目前canal版本仅支持一个数据库只有一种编码</code>，如果一个库存在多个编码，需要通过filter.regex配置，将其拆分为多个canal instance，<code>为每个instance指定不同的编码</code></li></ul><h2 id="_3、canal-properties配置相关" tabindex="-1"><a class="header-anchor" href="#_3、canal-properties配置相关"><span>3、canal.properties配置相关</span></a></h2><p><strong>vim conf/canal.properties</strong></p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># canal server绑定的本地IP信息，如果不配置，默认选择一个本机IP进行启动服务</span>
<span class="token key attr-name">canal.ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token comment"># canal server提供socket服务的端口</span>
<span class="token key attr-name">canal.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">1111</span>
<span class="token comment"># metrics 端口</span>
<span class="token key attr-name">canal.metrics.pull.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">11112</span>
<span class="token comment"># canal 服务的用户名（客户端连接的时候需要这个用户名和密码，也可以不配置）</span>
<span class="token key attr-name">canal.user</span> <span class="token punctuation">=</span> <span class="token value attr-value">canal</span>
<span class="token comment"># canal 服务的密码</span>
<span class="token key attr-name">canal.passwd</span> <span class="token punctuation">=</span> <span class="token value attr-value">123456</span>
<span class="token comment"># tcp, kafka, rocketMQ, rabbitMQ（如果我们要将数据发送到kafka中，则此处写kafka，然后配置kafka的配置，此处以tcp演示）</span>
<span class="token key attr-name">canal.serverMode</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span>
<span class="token comment"># 当前server上部署的instance列表,此处写 customer ,则和 conf 目录同级下必须要有一个 customer 文件夹，即上一步我们创建的，如果有多个instance说，则以英文的逗号隔开</span>
<span class="token key attr-name">canal.destinations</span> <span class="token punctuation">=</span> <span class="token value attr-value">customer</span>
<span class="token comment"># 如果系统是1个cpu，那么需要将这个并行设置成false</span>
<span class="token key attr-name">canal.instance.parser.parallel</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意事项：</strong></p><h3 id="_1、canal-destinations配置" tabindex="-1"><a class="header-anchor" href="#_1、canal-destinations配置"><span>1、canal.destinations配置</span></a></h3><p>在canal.properties定义了canal.destinations后，需要在canal.conf.dir对应的目录下建立同名的文件</p><p><strong>比如：</strong></p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">canal.destinations</span> <span class="token punctuation">=</span> <span class="token value attr-value">example1,example2</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时需要创建example1和example2两个目录，每个目录里各自有一份instance.properties.</p><p>ps. canal自带了一份instance.properties demo，可直接复制conf/example目录进行配置修改</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-R</span> example example1/
<span class="token function">cp</span> <span class="token parameter variable">-R</span> example example2/

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、canal-auto-scan配置" tabindex="-1"><a class="header-anchor" href="#_2、canal-auto-scan配置"><span>2、canal.auto.scan配置</span></a></h3><p>如果canal.properties未定义instance列表，但开启了canal.auto.scan时</p><ul><li>server第一次启动时，会自动扫描conf目录下，将文件名做为instance name，启动对应的instance</li><li>server运行过程中，会根据canal.auto.scan.interval定义的频率，进行扫描 <ol><li>发现目录有新增，启动新的instance</li><li>发现目录有删除，关闭老的instance</li><li>发现对应目录的instance.properties有变化，重启instance</li></ol></li></ul><h3 id="_3、启动canal" tabindex="-1"><a class="header-anchor" href="#_3、启动canal"><span>3、启动canal</span></a></h3><p>1、启动canal</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 启动canal server</span>
<span class="token function">sh</span> bin/startup.sh

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、查看日志</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># canal查看日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-n200</span> logs/canal/canal.log
<span class="token comment"># 如果canal启动失败则需要查看此日志</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-n200</span> logs/canal/canal_stdout.log

<span class="token comment"># 查看instance日志,由上面的配置可知，我们的instance的名字是customer,所以看这个日志. </span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-n200</span> logs/customer/customer.log

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、jdk版本</p><p>启动的时候需要注意一下本地<code>JDK</code>的版本，测试时发现使用jdk11不能启动，使用jdk8可以启动。</p><h1 id="四、客户端消费canal数据" tabindex="-1"><a class="header-anchor" href="#四、客户端消费canal数据"><span>四、客户端消费canal数据</span></a></h1><h2 id="_1、引入依赖" tabindex="-1"><a class="header-anchor" href="#_1、引入依赖"><span>1、引入依赖</span></a></h2><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.otter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>canal.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.otter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>canal.protocol<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.otter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>canal.common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、编写客户端代码" tabindex="-1"><a class="header-anchor" href="#_2、编写客户端代码"><span>2、编写客户端代码</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>otter<span class="token punctuation">.</span>canal<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">CanalConnector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>otter<span class="token punctuation">.</span>canal<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">CanalConnectors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>otter<span class="token punctuation">.</span>canal<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span></span><span class="token class-name">CanalEntry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>otter<span class="token punctuation">.</span>canal<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * canal client api 的使用
 * https://github.com/alibaba/canal/wiki/ClientExample
 * 测试过程中发现，如果修改一个sql语句，但是修改的值没有发生变化，则此处不会监控到。
 * 同一个客户端启动多次，只有一个客户端可以获取到数据
 *
 * <span class="token keyword">@author</span> huan.fu 2021/5/31 - 上午10:31
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CanalClientApi</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">String</span> destination <span class="token operator">=</span> <span class="token string">&quot;customer&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 创建一个 canal 链接</span>
        <span class="token class-name">CanalConnector</span> canalConnector <span class="token operator">=</span> <span class="token class-name">CanalConnectors</span><span class="token punctuation">.</span><span class="token function">newSingleConnector</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">,</span> destination<span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 链接对应的canal server</span>
        canalConnector<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 订阅那个库的那个表等</span>
        <span class="token doc-comment comment">/**
         * 订阅规则
         * 1.  所有表：.*   or  .*\\\\..*
         * 2.  canal schema下所有表： canal\\\\..*
         * 3.  canal下的以canal打头的表：canal\\\\.canal.*
         * 4.  canal schema下的一张表：canal\\\\.test1
         * 5.  多个规则组合使用：canal\\\\..*,mysql.test1,mysql.test2 (逗号分隔)
         */</span>
        canalConnector<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;temp_work\\\\.customer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 回滚到未进行 #ack 的地方，下次fetch的时候，可以从最后一个没有 #ack 的地方开始拿</span>
        canalConnector<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> batchSize <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 获取一批数据，不一定会获取到 batchSize 条</span>
            <span class="token class-name">Message</span> message <span class="token operator">=</span> canalConnector<span class="token punctuation">.</span><span class="token function">getWithoutAck</span><span class="token punctuation">(</span>batchSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取批次id</span>
            <span class="token keyword">long</span> batchId <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取数据</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CanalEntry<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&gt;</span></span> entries <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>batchId <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> entries<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;没有获取到数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CanalEntry<span class="token punctuation">.</span>Entry</span> entry <span class="token operator">:</span> entries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getEntryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EntryType</span><span class="token punctuation">.</span><span class="token constant">TRANSACTIONBEGIN</span> <span class="token operator">||</span> entry<span class="token punctuation">.</span><span class="token function">getEntryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EntryType</span><span class="token punctuation">.</span><span class="token constant">TRANSACTIONEND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">CanalEntry<span class="token punctuation">.</span>RowChange</span> rowChange<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    rowChange <span class="token operator">=</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>RowChange</span><span class="token punctuation">.</span><span class="token function">parseFrom</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getStoreValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;解析binlog数据出现异常 , data:&quot;</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EventType</span> eventType <span class="token operator">=</span> rowChange<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;================&gt; binlog[%s:%s] , name[%s,%s] , eventType : %s&quot;</span><span class="token punctuation">,</span>
                        entry<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLogfileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLogfileOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        entry<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSchemaName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        eventType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">==</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EventType</span><span class="token punctuation">.</span><span class="token constant">QUERY</span> <span class="token operator">||</span> rowChange<span class="token punctuation">.</span><span class="token function">getIsDdl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sql =&gt; &quot;</span> <span class="token operator">+</span> rowChange<span class="token punctuation">.</span><span class="token function">getSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CanalEntry<span class="token punctuation">.</span>RowData</span> rowData <span class="token operator">:</span> rowChange<span class="token punctuation">.</span><span class="token function">getRowDatasList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">==</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EventType</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">printColumn</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">getBeforeColumnsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>eventType <span class="token operator">==</span> <span class="token class-name">CanalEntry<span class="token punctuation">.</span>EventType</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">printColumn</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">getAfterColumnsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------&gt; before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">printColumn</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">getBeforeColumnsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------&gt; after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">printColumn</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">getAfterColumnsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            canalConnector<span class="token punctuation">.</span><span class="token function">ack</span><span class="token punctuation">(</span>batchId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printColumn</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CanalEntry<span class="token punctuation">.</span>Column</span><span class="token punctuation">&gt;</span></span> columns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CanalEntry<span class="token punctuation">.</span>Column</span> column <span class="token operator">:</span> columns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> column<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;    update=&quot;</span> <span class="token operator">+</span> column<span class="token punctuation">.</span><span class="token function">getUpdated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意⚠️：</strong></p><p>经测试，同一个客户端代码，启动多份，模拟多个客户端同时消费，只有一个客户端可以消费数据。</p><h2 id="_3、测试结果" tabindex="-1"><a class="header-anchor" href="#_3、测试结果"><span>3、测试结果</span></a></h2><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code>没有获取到数据
没有获取到数据
<span class="token punctuation">=</span><span class="token value attr-value">===============&gt; binlog[mysql-bin.000014:5771] , name[temp_work,customer] , eventType : UPDATE</span>
-------&gt; before
<span class="token key attr-name">id : 12    update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">phone : 123    update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">address : abcdefg    update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">column_4 :     update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
-------&gt; after
<span class="token key attr-name">id : 12    update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">phone : 123    update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">address : 数据改变    update</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">column_4 :     update</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
没有获取到数据
没有获取到数据

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到获取到了，改变后的数据。</p><h1 id="五、消费的binlog不存在" tabindex="-1"><a class="header-anchor" href="#五、消费的binlog不存在"><span>五、消费的binlog不存在</span></a></h1><p>1、查看数据库中binlog文件的位置</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;log_bin_basename&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2、找到binlog文件和位置</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查询 mysql-bin.000026 这个binlog文件，从pos点: 4 开始查起，一共查询查询5条</span>
<span class="token keyword">show</span> binlog events <span class="token operator">in</span> <span class="token string">&#39;mysql-bin.000026&#39;</span> <span class="token keyword">from</span> <span class="token number">4</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、停止canal-server</p><p>4、修改<code>instance</code>下的 <code>instance.properties</code>下的如下配置</p><p><img src="https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202209022334753.webp" alt="canal instance配置文件修改"></p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># mysql主库链接时起始的binlog文件</span>
<span class="token key attr-name">canal.instance.master.journal.name</span><span class="token punctuation">=</span><span class="token value attr-value">mysql-bin.000026</span>
<span class="token comment"># mysql主库链接时起始的binlog偏移量</span>
<span class="token key attr-name">canal.instance.master.position</span><span class="token punctuation">=</span><span class="token value attr-value">4</span>
<span class="token comment"># mysql主库链接时起始的binlog的时间戳</span>
<span class="token key attr-name">canal.instance.master.timestamp</span><span class="token punctuation">=</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、删除<code>meta.data</code>文件。</p><p><strong>注意⚠️：</strong></p><p>可能会出现的一个问题: <code>column size is not match for table:temp_work.customer,4 vs 3</code>，这个是因为binlog中的表结构和我们真实库中的表结构对不起来。</p>`,80),l=[p];function c(o,i){return a(),s("div",null,l)}const d=n(t,[["render",c],["__file","Canal的使用.html.vue"]]),k=JSON.parse('{"path":"/%E4%B8%AD%E9%97%B4%E4%BB%B6/Canal/Canal%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"一、背景","lang":"zh-CN","frontmatter":{"description":"一、背景 工作中有个需求，当数据库的数据变更时，另外一个系统中的数据要能及时感应到，通过调研知道，监听数据库的binlog可以做到一个准实时的通知，而canal主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费，正好满足需求，此处记录一下canal的简单使用。 二、canal的工作原理 canal的工作原理 步骤： canal模拟m...","head":[["meta",{"property":"og:url","content":"https://maijunxuan.cn/%E4%B8%AD%E9%97%B4%E4%BB%B6/Canal/Canal%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"麦俊轩的博客"}],["meta",{"property":"og:title","content":"一、背景"}],["meta",{"property":"og:description","content":"一、背景 工作中有个需求，当数据库的数据变更时，另外一个系统中的数据要能及时感应到，通过调研知道，监听数据库的binlog可以做到一个准实时的通知，而canal主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费，正好满足需求，此处记录一下canal的简单使用。 二、canal的工作原理 canal的工作原理 步骤： canal模拟m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202208080239150.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T21:01:35.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"一、背景"}],["meta",{"property":"article:author","content":"maijunxuan"}],["meta",{"property":"article:modified_time","content":"2023-06-13T21:01:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一、背景\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202208080239150.webp\\",\\"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202209022334753.webp\\"],\\"dateModified\\":\\"2023-06-13T21:01:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"maijunxuan\\",\\"email\\":\\"maijunxuan0309@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"1、mysql配置相关","slug":"_1、mysql配置相关","link":"#_1、mysql配置相关","children":[{"level":3,"title":"1、检测binlog是否开启","slug":"_1、检测binlog是否开启","link":"#_1、检测binlog是否开启","children":[]},{"level":3,"title":"2、mysql开启binlog","slug":"_2、mysql开启binlog","link":"#_2、mysql开启binlog","children":[]},{"level":3,"title":"3、创建canal用户","slug":"_3、创建canal用户","link":"#_3、创建canal用户","children":[]}]},{"level":2,"title":"2、canal配置相关","slug":"_2、canal配置相关","link":"#_2、canal配置相关","children":[{"level":3,"title":"1、下载canal","slug":"_1、下载canal","link":"#_1、下载canal","children":[]},{"level":3,"title":"2、配置一个instance","slug":"_2、配置一个instance","link":"#_2、配置一个instance","children":[]}]},{"level":2,"title":"3、canal.properties配置相关","slug":"_3、canal-properties配置相关","link":"#_3、canal-properties配置相关","children":[{"level":3,"title":"1、canal.destinations配置","slug":"_1、canal-destinations配置","link":"#_1、canal-destinations配置","children":[]},{"level":3,"title":"2、canal.auto.scan配置","slug":"_2、canal-auto-scan配置","link":"#_2、canal-auto-scan配置","children":[]},{"level":3,"title":"3、启动canal","slug":"_3、启动canal","link":"#_3、启动canal","children":[]}]},{"level":2,"title":"1、引入依赖","slug":"_1、引入依赖","link":"#_1、引入依赖","children":[]},{"level":2,"title":"2、编写客户端代码","slug":"_2、编写客户端代码","link":"#_2、编写客户端代码","children":[]},{"level":2,"title":"3、测试结果","slug":"_3、测试结果","link":"#_3、测试结果","children":[]}],"git":{"createdTime":1662316251000,"updatedTime":1686690095000,"contributors":[{"name":"MJX","email":"1585225345@qq.com","commits":3}]},"readingTime":{"minutes":8.09,"words":2427},"filePathRelative":"中间件/Canal/Canal的使用.md","localizedDate":"2022年9月4日","excerpt":"\\n<p>工作中有个需求，当数据库的数据变更时，另外一个系统中的数据要能及时感应到，通过调研知道，监听数据库的<code>binlog</code>可以做到一个准实时的通知，而<code>canal</code>主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费，正好满足需求，此处记录一下<code>canal</code>的简单使用。</p>\\n<h1>二、canal的工作原理</h1>\\n<p><img src=\\"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202208080239150.webp\\" alt=\\"canal的工作原理\\"></p>","autoDesc":true}');export{d as comp,k as data};
