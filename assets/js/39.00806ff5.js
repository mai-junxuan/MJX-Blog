(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{311:function(t,e,a){"use strict";a.r(e);var s=a(10),l=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"explain语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explain语句"}},[t._v("#")]),t._v(" Explain语句")]),t._v(" "),e("h2",{attrs:{id:"explain使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explain使用"}},[t._v("#")]),t._v(" EXPLAIN使用")]),t._v(" "),e("p",[t._v("explain可用来分析SQL的执行计划。格式如下：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\n{EXPLAIN | DESCRIBE | DESC} ANALYZE select_statement    \n\nexplain_type: {\n    FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n  | TREE\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | TABLE statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[t._v("结果输出展示：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("字段")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("format=json时的名称")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("select_id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("该语句的唯一标识")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("select_type")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("无")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查询类型")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("table")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("table_name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("表名")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("partitions")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("partitions")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("匹配的分区")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("type")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("access_type")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("联接类型")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("possible_keys")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("possible_keys")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("可能的索引选择")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("key")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("key")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("实际选择的索引")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("key_len")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("key_length")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("索引的长度")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ref")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("ref")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("索引的哪一列被引用了")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("rows")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("rows")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("估计要扫描的行")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("filtered")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("filtered")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("表示符合查询条件的数据百分比")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("strong",[t._v("Extra")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("没有")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("附加信息")])])])]),t._v(" "),e("h2",{attrs:{id:"结果解读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结果解读"}},[t._v("#")]),t._v(" 结果解读")]),t._v(" "),e("h3",{attrs:{id:"id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" id")]),t._v(" "),e("p",[t._v("该语句的唯一标识。如果explain的结果包括多个id值，则数字越大越先执行；而对于相同id的行，则表示从上往下依次执行。")]),t._v(" "),e("h3",{attrs:{id:"select-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" select_type")]),t._v(" "),e("p",[t._v("查询类型，有如下几种取值：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("查询类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("SIMPLE")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("简单查询（未使用UNION或子查询）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("PRIMARY")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("最外层的查询")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("UNION")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("在UNION中的第二个和随后的SELECT被标记为UNION。如果UNION被FROM子句中的子查询包含，那么它的第一个SELECT会被标记为DERIVED。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DEPENDENT UNION")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("UNION中的第二个或后面的查询，依赖了外面的查询")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("UNION RESULT")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("UNION的结果")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("SUBQUERY")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("子查询中的第一个 SELECT")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DEPENDENT SUBQUERY")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("子查询中的第一个 SELECT，依赖了外面的查询")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DERIVED")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用来表示包含在FROM子句的子查询中的SELECT，MySQL会递归执行并将结果放到一个临时表中。MySQL内部将其称为是Derived table（派生表），因为该临时表是从子查询派生出来的")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("DEPENDENT DERIVED")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("派生表，依赖了其他的表")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("MATERIALIZED")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("物化子查询")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("UNCACHEABLE SUBQUERY")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("子查询，结果无法缓存，必须针对外部查询的每一行重新评估")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("UNCACHEABLE UNION")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("UNION属于UNCACHEABLE SUBQUERY的第二个或后面的查询")])])])]),t._v(" "),e("h3",{attrs:{id:"table"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" table")]),t._v(" "),e("p",[t._v("表示当前这一行正在访问哪张表，如果SQL定义了别名，则展示表的别名")]),t._v(" "),e("h3",{attrs:{id:"partitions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#partitions"}},[t._v("#")]),t._v(" partitions")]),t._v(" "),e("p",[t._v("当前查询匹配记录的分区。对于未分区的表，返回null")]),t._v(" "),e("h3",{attrs:{id:"type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),e("p",[t._v("连接类型，有如下几种取值，"),e("strong",[t._v("性能从好到坏排序")]),t._v(" 如下：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("system：该表只有一行（相当于系统表），system是const类型的特例")])]),t._v(" "),e("li",[e("p",[t._v("const：针对主键或唯一索引的等值查询扫描, 最多只返回一行数据. const 查询速度非常快, 因为它仅仅读取一次即可")])]),t._v(" "),e("li",[e("p",[t._v("eq_ref：当使用了索引的全部组成部分，并且索引是PRIMARY KEY或UNIQUE NOT NULL 才会使用该类型，性能仅次于system及const。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-- 多表关联查询，单行匹配\nSELECT * FROM ref_table,other_table\n  WHERE ref_table.key_column=other_table.column;\n\n-- 多表关联查询，联合索引，多行匹配\nSELECT * FROM ref_table,other_table\n  WHERE ref_table.key_column_part1=other_table.column\n  AND ref_table.key_column_part2=1;\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("ref：当满足索引的最左前缀规则，或者索引不是主键也不是唯一索引时才会发生。如果使用的索引只会匹配到少量的行，性能也是不错的。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-- 根据索引（非主键，非唯一索引），匹配到多行\nSELECT * FROM ref_table WHERE key_column=expr;\n\n-- 多表关联查询，单个索引，多行匹配\nSELECT * FROM ref_table,other_table\n  WHERE ref_table.key_column=other_table.column;\n\n-- 多表关联查询，联合索引，多行匹配\nSELECT * FROM ref_table,other_table\n  WHERE ref_table.key_column_part1=other_table.column\n  AND ref_table.key_column_part2=1;\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("blockquote",[e("p",[e("strong",[t._v("TIPS")])]),t._v(" "),e("p",[t._v("最左前缀原则，指的是索引按照最左优先的方式匹配索引。比如创建了一个组合索引(column1, column2, column3)，那么，如果查询条件是：")]),t._v(" "),e("ul",[e("li",[t._v("WHERE column1 = 1、WHERE column1= 1 AND column2 = 2、WHERE column1= 1 AND column2 = 2 AND column3 = 3 都可以使用该索引；")]),t._v(" "),e("li",[t._v("WHERE column1 = 2、WHERE column1 = 1 AND column3 = 3就无法匹配该索引。")])])])]),t._v(" "),e("li",[e("p",[t._v("fulltext：全文索引")])]),t._v(" "),e("li",[e("p",[t._v("ref_or_null：该类型类似于ref，但是MySQL会额外搜索哪些行包含了NULL。这种类型常见于解析子查询")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT * FROM ref_table\n  WHERE key_column=expr OR key_column IS NULL;\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("index_merge：此类型表示使用了索引合并优化，表示一个查询里面用到了多个索引")])]),t._v(" "),e("li",[e("p",[t._v("unique_subquery：该类型和eq_ref类似，但是使用了IN查询，且子查询是主键或者唯一索引。例如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("value IN (SELECT primary_key FROM single_table WHERE some_expr)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("index_subquery：和unique_subquery类似，只是子查询使用的是非唯一索引")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("value IN (SELECT key_column FROM single_table WHERE some_expr)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("range：范围扫描，表示检索了指定范围的行，主要用于有限制的索引扫描。比较常见的范围扫描是带有BETWEEN子句或WHERE子句里有>、>=、<、<=、IS NULL、<=>、BETWEEN、LIKE、IN()等操作符。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("SELECT * FROM tbl_name\n  WHERE key_column BETWEEN 10 and 20;\n\nSELECT * FROM tbl_name\n  WHERE key_column IN (10,20,30);\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("index：全索引扫描，和ALL类似，只不过index是全盘扫描了索引的数据。当查询仅使用索引中的一部分列时，可使用此类型。有两种场景会触发：")]),t._v(" "),e("ul",[e("li",[t._v("如果索引是查询的覆盖索引，并且索引查询的数据就可以满足查询中所需的所有数据，则只扫描索引树。此时，explain的Extra 列的结果是Using index。index通常比ALL快，因为索引的大小通常小于表数据。")]),t._v(" "),e("li",[t._v("按索引的顺序来查找数据行，执行了全表扫描。此时，explain的Extra列的结果不会出现Uses index。")])])]),t._v(" "),e("li",[e("p",[t._v("ALL：全表扫描，性能最差。")])])]),t._v(" "),e("h3",{attrs:{id:"possible-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#possible-keys"}},[t._v("#")]),t._v(" possible_keys")]),t._v(" "),e("p",[t._v("展示当前查询可以使用哪些索引，这一列的数据是在优化过程的早期创建的，因此有些索引可能对于后续优化过程是没用的。")]),t._v(" "),e("h3",{attrs:{id:"key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" key")]),t._v(" "),e("p",[t._v("表示MySQL实际选择的索引")]),t._v(" "),e("h3",{attrs:{id:"key-len"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-len"}},[t._v("#")]),t._v(" key_len")]),t._v(" "),e("p",[t._v("索引使用的字节数。由于存储格式，当字段允许为NULL时，key_len比不允许为空时大1字节。")]),t._v(" "),e("h3",{attrs:{id:"ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),e("p",[t._v("表示将哪个字段或常量和key列所使用的字段进行比较。")]),t._v(" "),e("p",[t._v("如果ref是一个函数，则使用的值是函数的结果。要想查看是哪个函数，可在EXPLAIN语句之后紧跟一个SHOW WARNING语句。")]),t._v(" "),e("h3",{attrs:{id:"rows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rows"}},[t._v("#")]),t._v(" rows")]),t._v(" "),e("p",[t._v("MySQL估算会扫描的行数，数值越小越好。")]),t._v(" "),e("h3",{attrs:{id:"filtered"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtered"}},[t._v("#")]),t._v(" filtered")]),t._v(" "),e("p",[t._v("表示符合查询条件的数据百分比，最大100。用rows × filtered可获得和下一张表连接的行数。例如rows = 1000，filtered = 50%，则和下一张表连接的行数是500。")]),t._v(" "),e("h3",{attrs:{id:"extra"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extra"}},[t._v("#")]),t._v(" Extra")]),t._v(" "),e("p",[t._v("展示有关本次查询的附加信息，取值如下：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("Using "),e("strong",[t._v("filesort")])])]),t._v(" "),e("p",[t._v("当Query 中包含 ORDER BY 操作，而且无法利用索引完成排序操作的时候，MySQL Query Optimizer 不得不选择相应的排序算法来实现。数据较少时从内存排序，否则从磁盘排序。Explain不会显示的告诉客户端用哪种排序。官方解释：“MySQL需要额外的一次传递，以找出如何按排序顺序检索行。通过根据联接类型浏览所有行并为所有匹配WHERE子句的行保存排序关键字和行的指针来完成排序。然后关键字被排序，并按排序顺序检索行”")])]),t._v(" "),e("li",[e("p",[t._v("Using index")]),t._v(" "),e("p",[t._v("仅使用索引树中的信息从表中检索列信息，而不必进行其他查找以读取实际行。当查询仅使用属于单个索引的列时，可以使用此策略。例如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("explain SELECT id FROM t\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("Using temporary")]),t._v(" "),e("p",[t._v("为了解决该查询，MySQL需要创建一个临时表来保存结果。如果查询包含不同列的GROUP BY和 ORDER BY子句，通常会发生这种情况。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-- name无索引\nexplain SELECT name FROM t1 group by name\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("Using where")]),t._v(" "),e("p",[t._v("如果我们不是读取表的所有数据，或者不是仅仅通过索引就可以获取所有需要的数据，则会出现using where信息")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("explain SELECT * FROM t1 where id > 5\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);