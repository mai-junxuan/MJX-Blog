(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{351:function(a,s,t){"use strict";t.r(s);var e=t(10),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"基于gitee实现jenkins自动化部署springboot项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于gitee实现jenkins自动化部署springboot项目"}},[a._v("#")]),a._v(" 基于Gitee实现Jenkins自动化部署SpringBoot项目")]),a._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("近期项目组需要对老项目做一些持续集成和持续部署的要求，所以再次部署了一边Jenkins，将整个配置过程记录到博客中。 在部署的过程中笔者尝试通过阿里云的方式部署了一遍，而本文为了更直观的介绍整个过程会给予虚拟机再次进行部署。")]),a._v(" "),s("p",[a._v("注:本篇教程部署过程是基于外网部署的，关于内网的部署过程后续笔者会将文章整理出来。")]),a._v(" "),s("h2",{attrs:{id:"预期效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预期效果"}},[a._v("#")]),a._v(" 预期效果")]),a._v(" "),s("p",[a._v("如下图我们本次配置的Jenkins可以做到下图所示的效果:")]),a._v(" "),s("ol",[s("li",[a._v("我们本地开发项目提交到gitee上。")]),a._v(" "),s("li",[a._v("gitee根据我们的配置通知Jenkins更新。")]),a._v(" "),s("li",[a._v("Jenkins收到更新通知完成最新分支拉取并更新服务器项目。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719479.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("所以我们现在在gitee上准备了这样一个spring boot项目。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719266.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("可以看到如果我们键入")]),a._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("curl 127.0.0.1:9500/hello\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("那么就会输出")]),a._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Hello mjx!\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这一点，我们也可以在服务器上得以印证。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719933.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("现在我们不妨做个修改，将输出结果改为hello java")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719098.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后将项目提交")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719552.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("随后可以看到我们服务器上的Jenkins自动开始打包。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719928.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("再次curl一遍，发现结果更新了。这就是我们的持续集成和持续部署的一次完整的流程，是不是比手动打包更方便呢？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719465.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("了解了整体预期效果之后，我们就开始Jenkins的安装和配置过程。")]),a._v(" "),s("h2",{attrs:{id:"jenkins安装与配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins安装与配置"}},[a._v("#")]),a._v(" Jenkins安装与配置")]),a._v(" "),s("h3",{attrs:{id:"准备jdk11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备jdk11"}},[a._v("#")]),a._v(" 准备jdk11")]),a._v(" "),s("p",[a._v("注意，最新版本的Jenkins基本都是使用jdk11，所以我们这里需要提前准备一下jdk11。这一步网上应该很多地方都可以找到资料，感兴趣的读者可以自行配置。笔者这里服务器已经提前准备好了，就不多赘述了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719460.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"下载jenkins安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载jenkins安装包"}},[a._v("#")]),a._v(" 下载Jenkins安装包")]),a._v(" "),s("p",[a._v("首先自然是到Jenkins官网下载，笔者为了简单，就直接采用war包的形式进行部署。对应war包地址下载如下:")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://mirrors.jenkins.io/war-stable/latest/jenkins.war",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://mirrors.jenkins.io/war-stable/latest/jenkins.war(opens new window)"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("完成war包下载之后，我们将这个包推送到服务器上。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719598.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"启动jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动jenkins"}},[a._v("#")]),a._v(" 启动Jenkins")]),a._v(" "),s("p",[a._v("为了保证后续步骤的顺利，我们先使用前台命令启动一下Jenkins。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("/root/jdk11/bin/java "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" jenkins.war "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--httpPort")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("如下图所示，如果我们可以通过8080端口打开看到这个页面就说明Jenkins启动成功了。那么我们就可以开始进行Jenkins的初始化配置了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719811.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"进行jenkins初始化配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进行jenkins初始化配置"}},[a._v("#")]),a._v(" 进行Jenkins初始化配置")]),a._v(" "),s("p",[a._v("从上文图中我们知道初次访问Jenkins需要键入管理员密码，密码位置在上图也已经展示，我们按需找到对应文件复制粘贴即可。")]),a._v(" "),s("p",[a._v("我们键入命令")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /root/.jenkins/secrets/initialAdminPassword\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("然后会看到一段输出结果，我们将其复制粘贴到页面上即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719438.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后直接点击下一步")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719808.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("下一个页面，我们按照默认选择推荐插件安装即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719369.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("这一步可能比较久，大家需要耐心等待一会就好了。等到这一步完成之后我们进入用户基本信息配置了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719284.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"基本信息页面配置用户基本信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本信息页面配置用户基本信息"}},[a._v("#")]),a._v(" 基本信息页面配置用户基本信息")]),a._v(" "),s("p",[a._v("如下图所示，我们只要配置后续用到的登录用户信息即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719583.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("这里选择默认即可，点击下一步即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719666.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("自此我们就完成了Jenkins最基础的配置了，后续我们就进入页面进行系统全局的配置了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719106.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"常规插件安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规插件安装"}},[a._v("#")]),a._v(" 常规插件安装")]),a._v(" "),s("p",[a._v("笔者本次安装的版本为2.387.2，界面看起来还是蛮清爽的。这里我们需要点击下图所示的按钮进入管理界面，找到插件管理进行一些插件安装。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833088.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("如下图，我们点击manage plugins")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833008.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("首先找到Publish over SSH，点击安装。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719205.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("同理由于我们的项目为spring boot项目，所以我们要找到maven插件点击安装。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833222.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("由于我们的项目存放在gitee上，所以最后就是gitee插件了的安装了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833380.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("上述步骤安装完成之后，我们重启一下Jenkins确保插件生效以及后台启动开始进入下一步配置步骤。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" /root/jdk11/bin/java  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" /home/jenkins/jenkins.war "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--httpPort")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"jenkins系统配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins系统配置"}},[a._v("#")]),a._v(" Jenkins系统配置")]),a._v(" "),s("p",[a._v("我们点击系统配置进入Jenkins全局配置页面。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833674.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("首先滑到最下方，找到 Publish over SSH进行远程服务器配置。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833735.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("再往下滑一些输入远程服务器信息。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833392.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击一下测试配置，确认连通性，如果没问题，点击保存即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833065.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"跨域配置解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域配置解决"}},[a._v("#")]),a._v(" 跨域配置解决")]),a._v(" "),s("p",[a._v("笔者上一次搭建过程中，会遇到跨域的问题，所以这里提前设置的一下，解决跨域问题。首先我们点击全局安全设置。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833032.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("找到跨域请求伪造保护，勾选启动代理兼容器，完成后点击保存即可。 "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833329.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("这里还需要补充一部，笔者上一次部署Jenkins时gitee推送请求到Jenkins报了"),s("code",[a._v("403 No valid crumb was included in the request")]),a._v("，所以我们还需要点击脚本命令行输入一段指令解决另一个跨域问题。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833459.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("如下图所示,在文本框中输入")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("hudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("然后点击运行")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719603.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("出现result为true，就说明这一步成功了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280835703.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("回到我们的全局安全配置页面，可以看到跨站请求伪造保护变成这样的文本，由此确认所有的跨域问题都配置解决了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719714.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"插件配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件配置"}},[a._v("#")]),a._v(" 插件配置")]),a._v(" "),s("p",[a._v("接下来就是jdk、maven、git相关插件的配置了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833262.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("首先是maven的配置，这里只需指定maven的setting文件路径即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719978.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后就是jdk的配置")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719973.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后就是git的安装和配置了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833647.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("最后我们再配置一下maven的路径")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833946.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h2",{attrs:{id:"项目配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目配置"}},[a._v("#")]),a._v(" 项目配置")]),a._v(" "),s("h3",{attrs:{id:"准备一个spring-boot项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备一个spring-boot项目"}},[a._v("#")]),a._v(" 准备一个spring-boot项目")]),a._v(" "),s("p",[a._v("关于Jenkins的基本配置都差不多完成了，接下来我们就可以准备一个web项目实现持续集成和持续部署了。")]),a._v(" "),s("p",[a._v("这里笔者也提前准备好了一个spring boot项目并将其初始化提交到gitee仓库。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833390.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"jenkins上创建一个item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins上创建一个item"}},[a._v("#")]),a._v(" Jenkins上创建一个item")]),a._v(" "),s("p",[a._v("点击新建任务")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833748.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("输入项目名称，选择构建一个maven项目并点击确定。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280833469.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后我们就到达了项目配置页面了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832585.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("我们不妨先添加一段描述")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832645.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后输入项目的远程仓库地址，可以看到这里抛出了未认证的问题，原因很简单，我们没有键入git的账号和密码，所以我们点击添加键配置一下。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832596.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击添加，选择Jenkins凭据提供者。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832235.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("输入gitee账号和密码，然后点击确定。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832726.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后页面就会跳转回源码管理的页面，我们选择刚刚配置的账号即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832775.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("可以看到现在不仅不会报错了，还输出了一段分支的情况，这里我们默认选择master即可。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832208.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("我们继续往下滑找到build，输入构建的maven命令，以笔者为例，键入的maven命令为:")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("clean package "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-U")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dmaven.testskip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注意，上述测试命令无法避免编译测试，如果希望跳过所有测试的用户建议使用下面这个命令:")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("clean package "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dmaven.test.skip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-D.test.skip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832452.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后我们就继续配置后置构建完成后的操作了，因为笔者后续会将项目存到tmp目录，所以笔者这里会在tmp目录写一个名为stop.sh的脚本，内容如下:")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Stop Procedure : jenkins-spring-boot.jar"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("pid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ef")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" jenkins-spring-boot.jar"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $2}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'old Procedure pid:'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$pid")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$pid")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$pid")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("完成后将这个脚本权限设置为777")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v(" stop.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("完成这个脚本配置之后，我们就可以配置post step了")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832471.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("从上图中可以看到笔者键入了一段脚本，如下所示，这段脚本做的步骤为:")]),a._v(" "),s("ol",[s("li",[a._v("maven打包")]),a._v(" "),s("li",[a._v("将打包的jar包复制到tmp目录下，注意这个目录路径格式为"),s("code",[a._v("Jenkins工作路径+创建的item名+target+jar包名称")]),a._v("。")]),a._v(" "),s("li",[a._v("进入tmp目录。")]),a._v(" "),s("li",[a._v("执行停止脚本。")]),a._v(" "),s("li",[a._v("重点！！！改变BUILD_ID值，避免Jenkins脚本执行结束后将我们启动的maven项目关闭。")]),a._v(" "),s("li",[a._v("启动项目。")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 复制文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" /root/.jenkins/workspace/first-project/target/jenkins-spring-boot.jar /tmp/\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入服务器目录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /tmp/\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" stop.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改BUILD_ID避免下面的启动命令启动的子进程被Jenkins杀掉")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BUILD_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("dontKillMe\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" jenkins-spring-boot.jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"测试部署过程是否成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试部署过程是否成功"}},[a._v("#")]),a._v(" 测试部署过程是否成功")]),a._v(" "),s("p",[a._v("完成所有配置后，我们可以先看看配置是否准确，这里点击构建测试一下。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832198.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("可以看到任务栏显示我们正在构建的任务，我们可以点击进度条查看进度。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832630.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击控制台输出可以查看构建详情。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832866.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("经过漫长的等待，可以看到我的部署成功了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832752.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("我们到服务器看看有没有启动的Java进程，如下所示，可以可以看到Jenkins成功的拉到我们的项目并将项目启动了。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ps -ef |grep java")]),a._v("\nroot       "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9237")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 02:54 ?        00:01:16 /root/jdk11/bin/java "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" jenk                                                                              ins.war "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--httpPort")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\nroot      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12928")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" 05:38 ?        00:00:03 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" jenkins-spring-boot.                                                                              jar\nroot      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12969")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9681")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 05:38 pts/3    00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("测试连通性，可以看到输出了hello java，自此Jenkins的基本部署配置是完成了。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# curl 127.0.0.1:9500/hello")]),a._v("\nHello "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@localhost tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"基于gitee的webhook实现自动化部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于gitee的webhook实现自动化部署"}},[a._v("#")]),a._v(" 基于gitee的webhook实现自动化部署")]),a._v(" "),s("h3",{attrs:{id:"配置jenkins中的gitee配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置jenkins中的gitee配置"}},[a._v("#")]),a._v(" 配置Jenkins中的gitee配置")]),a._v(" "),s("p",[a._v("我们上文演示的项目可以看到，我们只需提交一下代码，Jenkins就会自动完成打包部署，这一点就是通过在gitee配置Jenkins的更新触发地址实现的，所以确保上述部署过程是成功的之后，我们不妨完善一下gitee的配置实现自动化部署。")]),a._v(" "),s("p",[a._v("我们在系统管理中找到系统配置选择gitee配置。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280832363.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("如下图先输入完gitee链接名和url地址。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834311.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后点击添加配置gitee令牌。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834504.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击添加后会出现一个弹窗，如下图我们将类型设置为gitee api令牌，然后点击截图所示的地址到gitee去创建令牌。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280835994.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("如下图点开这个链接输入我们的账号密码就会到达这个界面，我们需要点击添加创建一个令牌。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834713.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("如下图，我们编辑好描述直接点击提交。 "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280836946.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("然后我们就会得到一串令牌的值，点击复制。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834081.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("回到Jenkins粘贴上去，然后点击添加。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834736.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("此时页面就会跳转回gitee配置页面，我们选择刚刚配置的令牌。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834592.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击一下测试链接，确保成功之后，我们继续下一步。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719419.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"配置构建触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置构建触发器"}},[a._v("#")]),a._v(" 配置构建触发器")]),a._v(" "),s("p",[a._v("回到Jenkins主页，点击我们配置的item")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834827.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击配置，进入配置界面")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834411.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("找到构建触发器，勾选gitee webhook触发构建，将截图中的url地址记下来，后面配置gitee会用到。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280836254.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("往下走一点，找到webhook密码点击生成，生成后将其复制下来，配置gitee会用到。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719938.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("完成配置并将url和生成密码记下来之后点击保存，进入gitee的配置。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834948.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"配置gitee-webhook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置gitee-webhook"}},[a._v("#")]),a._v(" 配置gitee webhook")]),a._v(" "),s("p",[a._v("上文我们得到的Jenkins触发地址和webhook密码，这里我们到gitee界面完成剩余配置。首先点击我们的gitee上对应项目的地址，选择管理。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834879.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("点击添加web hook,将刚刚复制的url和密码粘贴上去，完成后点击更新。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834358.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("我们回到页面，可以看到gitee自动触发了一次构建，可以看到请求结果为成功。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834982.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("我们立刻到Jenkins上看看，可以看到Jenkins收到了gitee的一次构建请求，自此自动化部署就算完全打通了，我们不妨修改一下代码测试一下全流程。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280834355.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h3",{attrs:{id:"全流程测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全流程测试"}},[a._v("#")]),a._v(" 全流程测试")]),a._v(" "),s("p",[a._v("如下图，我们将代码修改一下并提交，只要我们看到最终服务器上输出结果为hello shak-chili就说明Jenkins回自动化部署更新了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/img202305061719202.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("代码提交后不久，我们看到看了Jenkins自动触发了一次更新。我们耐心等它构建完成。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280835527.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("p",[a._v("完成后，我们请求一下这个地址。可以看到输出结果为hello shack-chili，由此可知整个自动化部署步骤算是完结了。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/mai-junxuan/Cloud-image/image/202308280835120.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),s("p",[a._v("有时候我们希望重启Jenkins让某些配置生效，亦或者让Jenkins关闭，这里笔者就介绍Jenkins中几个页面上重启和关闭的方式。")]),a._v(" "),s("h3",{attrs:{id:"浏览器进入jenkins完成登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进入jenkins完成登录"}},[a._v("#")]),a._v(" 浏览器进入Jenkins完成登录")]),a._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("http"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Jenkins的ip地址:Jenkins启动端口/")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"关闭jenkins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭jenkins"}},[a._v("#")]),a._v(" 关闭Jenkins")]),a._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("http"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Jenkins的ip地址:Jenkins启动端口/exit ")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"重启jenkies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重启jenkies"}},[a._v("#")]),a._v(" 重启Jenkies")]),a._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("http"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Jenkins的ip地址:Jenkins启动端口/restart ")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"重新加载配置信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重新加载配置信息"}},[a._v("#")]),a._v(" 重新加载配置信息")]),a._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("http"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Jenkins的ip地址:Jenkins启动端口/reload ")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);