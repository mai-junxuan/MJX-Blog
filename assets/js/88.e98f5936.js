(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{360:function(a,t,n){"use strict";n.r(t);var s=n(10),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"spring的常用注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring的常用注解"}},[a._v("#")]),a._v(" Spring的常用注解")]),a._v(" "),t("p",[a._v("注解本身没有功能的，就和 xml 一样。注解和 xml 都是一种元数据，元数据即解释数据的数据，这就是所谓配置。")]),a._v(" "),t("p",[a._v("本文主要罗列 Spring|Spring MVC相关注解的简介。")]),a._v(" "),t("p",[a._v("Spring部分")]),a._v(" "),t("h2",{attrs:{id:"_1、声明bean的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、声明bean的注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("1、声明bean的注解")])]),a._v(" "),t("p",[a._v("@Component 组件，没有明确的角色")]),a._v(" "),t("p",[a._v("@Service 在业务逻辑层使用（service层）")]),a._v(" "),t("p",[a._v("@Repository 在数据访问层使用（dao层）")]),a._v(" "),t("p",[a._v("@Controller 在展现层使用，控制器的声明（C）")]),a._v(" "),t("h2",{attrs:{id:"_2、注入bean的注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、注入bean的注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("2、注入bean的注解")])]),a._v(" "),t("p",[a._v("@Autowired：由Spring提供")]),a._v(" "),t("p",[a._v("@Inject：由JSR-330提供")]),a._v(" "),t("p",[a._v("@Resource：由JSR-250提供")]),a._v(" "),t("p",[a._v("都可以注解在set方法和属性上，推荐注解在属性上（一目了然，少写代码）。")]),a._v(" "),t("h2",{attrs:{id:"_3、java配置类相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、java配置类相关注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("3、Java配置类相关注解")])]),a._v(" "),t("p",[a._v("@Configuration 声明当前类为配置类，相当于xml形式的Spring配置（类上）")]),a._v(" "),t("p",[a._v("@Bean 注解在方法上，声明当前方法的返回值为一个bean，替代xml中的方式（方法上）")]),a._v(" "),t("p",[a._v("@Configuration 声明当前类为配置类，其中内部组合了@Component注解，表明这个类是一个bean（类上）")]),a._v(" "),t("p",[a._v("@ComponentScan 用于对Component进行扫描，相当于xml中的（类上）")]),a._v(" "),t("p",[a._v("@WishlyConfiguration 为@Configuration与@ComponentScan的组合注解，可以替代这两个注解")]),a._v(" "),t("h2",{attrs:{id:"_4、切面-aop-相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、切面-aop-相关注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("4、切面（AOP）相关注解")])]),a._v(" "),t("p",[a._v("Spring支持AspectJ的注解式切面编程。")]),a._v(" "),t("p",[a._v("@Aspect 声明一个切面（类上） 使用@After、@Before、@Around定义建言（advice），可直接将拦截规则（切点）作为参数。")]),a._v(" "),t("p",[a._v("@After 在方法执行之后执行（方法上） @Before 在方法执行之前执行（方法上） @Around 在方法执行之前与之后执行（方法上）")]),a._v(" "),t("p",[a._v("@PointCut 声明切点 在java配置类中使用@EnableAspectJAutoProxy注解开启Spring对AspectJ代理的支持（类上）")]),a._v(" "),t("h2",{attrs:{id:"_5、-bean的属性支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、-bean的属性支持"}},[a._v("#")]),a._v(" "),t("strong",[a._v("5、@Bean的属性支持")])]),a._v(" "),t("p",[a._v("@Scope 设置Spring"),t("a",{attrs:{href:"https://cloud.tencent.com/product/tke?from=10680",target:"_blank",rel:"noopener noreferrer"}},[a._v("容器"),t("OutboundLink")],1),a._v("如何新建Bean实例（方法上，得有@Bean） 其设置类型包括：")]),a._v(" "),t("p",[a._v("Singleton （单例,一个Spring容器中只有一个bean实例，默认模式）, Protetype （每次调用新建一个bean）, Request （web项目中，给每个http request新建一个bean）, Session （web项目中，给每个http session新建一个bean）, GlobalSession（给每一个 global http session新建一个Bean实例）")]),a._v(" "),t("p",[a._v("@StepScope 在Spring Batch中还有涉及")]),a._v(" "),t("p",[a._v("@PostConstruct 由JSR-250提供，在构造函数执行完之后执行，等价于xml配置文件中bean的initMethod")]),a._v(" "),t("p",[a._v("@PreDestory 由JSR-250提供，在Bean销毁之前执行，等价于xml配置文件中bean的destroyMethod")]),a._v(" "),t("h2",{attrs:{id:"_6、-value注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、-value注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("6、@Value注解")])]),a._v(" "),t("p",[a._v("@Value 为属性注入值（属性上） 支持如下方式的注入：")]),a._v(" "),t("p",[a._v("注入普通字符")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入操作系统属性")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"#{systemProperties['os.name']}\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" osName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入表达式结果")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#{T(java.lang.Math).random()}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" randomNumber"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入其它bean属性")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"domeClass.name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入文件资源")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"classpath:com/mjx/hello/test.txt"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入网站资源")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://www.baidu.com"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注入配置文件")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"${book.name}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h2",{attrs:{id:"_7、环境切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、环境切换"}},[a._v("#")]),a._v(" "),t("strong",[a._v("7、环境切换")])]),a._v(" "),t("p",[a._v("@Profile 通过设定Environment的ActiveProfiles来设定当前context需要使用的配置环境。（类或方法上）")]),a._v(" "),t("p",[a._v("@Conditional Spring4中可以使用此注解定义条件话的bean，通过实现Condition接口，并重写matches方法，从而决定该bean是否被实例化。（方法上）")]),a._v(" "),t("h2",{attrs:{id:"_8、异步相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、异步相关"}},[a._v("#")]),a._v(" "),t("strong",[a._v("8、异步相关")])]),a._v(" "),t("p",[a._v("@EnableAsync 配置类中，通过此注解开启对异步任务的支持，叙事性AsyncConfigurer接口（类上）")]),a._v(" "),t("p",[a._v("@Async 在实际执行的bean方法使用该注解来申明其是一个异步任务（方法上或类上所有的方法都将异步，需要@EnableAsync开启异步任务）")]),a._v(" "),t("h2",{attrs:{id:"_9、定时任务相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、定时任务相关"}},[a._v("#")]),a._v(" "),t("strong",[a._v("9、定时任务相关")])]),a._v(" "),t("p",[a._v("@EnableScheduling 在配置类上使用，开启计划任务的支持（类上）")]),a._v(" "),t("p",[a._v("@Scheduled 来申明这是一个任务，包括cron,fixDelay,fixRate等类型（方法上，需先开启计划任务的支持）")]),a._v(" "),t("h2",{attrs:{id:"_10、-enable-注解说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、-enable-注解说明"}},[a._v("#")]),a._v(" "),t("strong",[a._v("10、@Enable*注解说明")])]),a._v(" "),t("p",[a._v("这些注解主要用来开启对xxx的支持。 @EnableAspectJAutoProxy 开启对AspectJ自动代理的支持")]),a._v(" "),t("p",[a._v("@EnableAsync 开启异步方法的支持")]),a._v(" "),t("p",[a._v("@EnableScheduling 开启计划任务的支持")]),a._v(" "),t("p",[a._v("@EnableWebMvc 开启Web MVC的配置支持")]),a._v(" "),t("p",[a._v("@EnableConfigurationProperties 开启对@ConfigurationProperties注解配置Bean的支持")]),a._v(" "),t("p",[a._v("@EnableJpaRepositories 开启对SpringData JPA Repository的支持")]),a._v(" "),t("p",[a._v("@EnableTransactionManagement 开启注解式事务的支持")]),a._v(" "),t("p",[a._v("@EnableTransactionManagement 开启注解式事务的支持")]),a._v(" "),t("p",[a._v("@EnableCaching 开启注解式的缓存支持")]),a._v(" "),t("h2",{attrs:{id:"_11、测试相关注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11、测试相关注解"}},[a._v("#")]),a._v(" "),t("strong",[a._v("11、测试相关注解")])]),a._v(" "),t("p",[a._v("@RunWith 运行器，Spring中通常用于对JUnit的支持")]),a._v(" "),t("p",[a._v("@ContextConfiguration 用来加载配置ApplicationContext，其中classes属性用来加载配置类")]),a._v(" "),t("h2",{attrs:{id:"_12、springmvc部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12、springmvc部分"}},[a._v("#")]),a._v(" 12、SpringMVC部分")]),a._v(" "),t("p",[a._v("@EnableWebMvc 在配置类中开启Web MVC的配置支持，如一些ViewResolver或者MessageConverter等，若无此句，重写WebMvcConfigurerAdapter方法（用于对SpringMVC的配置）。")]),a._v(" "),t("p",[a._v("@Controller 声明该类为SpringMVC中的Controller")]),a._v(" "),t("p",[a._v("@RequestMapping 用于映射Web请求，包括访问路径和参数（类或方法上）")]),a._v(" "),t("p",[a._v("@ResponseBody 支持将返回值放在response内，而不是一个页面，通常用户返回json数据（返回值旁或方法上）")]),a._v(" "),t("p",[a._v("@RequestBody 允许request的参数在request体中，而不是在直接连接在地址后面。（放在参数前）")]),a._v(" "),t("p",[a._v("@PathVariable 用于接收路径参数，比如@RequestMapping(“/hello/{name}”)申明的路径，将注解放在参数中前，即可获取该值，通常作为Restful的接口实现方法。")]),a._v(" "),t("p",[a._v("@RestController 该注解为一个组合注解，相当于@Controller和@ResponseBody的组合，注解在类上，意味着，该Controller的所有方法都默认加上了@ResponseBody。")]),a._v(" "),t("p",[a._v("@ControllerAdvice 通过该注解，我们可以将对于控制器的全局配置放置在同一个位置，注解了@Controller的类的方法可使用@ExceptionHandler、@InitBinder、@ModelAttribute注解到方法上， 这对所有注解了 @RequestMapping的控制器内的方法有效。")]),a._v(" "),t("p",[a._v("@ExceptionHandler 用于全局处理控制器里的异常")]),a._v(" "),t("p",[a._v("@InitBinder 用来设置WebDataBinder，WebDataBinder用来自动绑定前台请求参数到Model中。")]),a._v(" "),t("p",[a._v("@ModelAttribute 本来的作用是绑定键值对到Model里，在@ControllerAdvice中是让全局的@RequestMapping都能获得在此处设置的键值对。")])])}),[],!1,null,null,null);t.default=e.exports}}]);