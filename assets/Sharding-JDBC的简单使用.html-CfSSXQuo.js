import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-2Nmlc3aW.js";const t={},p=e(`<h1 id="sharding-jdbc的简单使用" tabindex="-1"><a class="header-anchor" href="#sharding-jdbc的简单使用"><span>Sharding-JDBC的简单使用</span></a></h1><h3 id="_1、创建一个springboot项目" tabindex="-1"><a class="header-anchor" href="#_1、创建一个springboot项目"><span>1、创建一个springboot项目</span></a></h3><h3 id="_2、导入如下依赖" tabindex="-1"><a class="header-anchor" href="#_2、导入如下依赖"><span>2、导入如下依赖</span></a></h3><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.shardingsphere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>sharding-jdbc-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、sharding-jdbc实现水平分表" tabindex="-1"><a class="header-anchor" href="#_2、sharding-jdbc实现水平分表"><span>2、sharding-jdbc实现水平分表</span></a></h3><h4 id="_1、创建sharding-sphere数据库" tabindex="-1"><a class="header-anchor" href="#_1、创建sharding-sphere数据库"><span>1、创建sharding_sphere数据库</span></a></h4><h4 id="_2、在数据库中创建两张表-orders-1和orders-2" tabindex="-1"><a class="header-anchor" href="#_2、在数据库中创建两张表-orders-1和orders-2"><span>2、在数据库中创建两张表，orders_1和orders_2</span></a></h4><h4 id="_3、分片规则-如果订单编号是偶数添加到orders-1-如果是奇数添加到orders-2" tabindex="-1"><a class="header-anchor" href="#_3、分片规则-如果订单编号是偶数添加到orders-1-如果是奇数添加到orders-2"><span>3、分片规则：如果订单编号是偶数添加到orders_1,如果是奇数添加到orders_2</span></a></h4><h4 id="_4、创建实体类" tabindex="-1"><a class="header-anchor" href="#_4、创建实体类"><span>4、创建实体类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Orders</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderType<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> customerId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> amount<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、创建mapper类" tabindex="-1"><a class="header-anchor" href="#_5、创建mapper类"><span>5、创建mapper类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrdersMapper</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into orders(id,order_type,customer_id,amount) values(#{id},#{orderType},#{customerId},#{amount})&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Orders</span> orders<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from orders where id = #{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;orderType&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;order_type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;customerId&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;customer_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Orders</span> <span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、创建配置文件" tabindex="-1"><a class="header-anchor" href="#_6、创建配置文件"><span>6、创建配置文件</span></a></h4><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#整合mybatis</span>
<span class="token key attr-name">mybatis.type-aliases-package</span><span class="token punctuation">=</span><span class="token value attr-value">com.ityml.mapper</span>

<span class="token comment">#配置数据源的名称</span>
<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">ds1</span>


<span class="token comment">#配置数据源的具体内容，</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/sharding_sphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#指定orders表的分布情况，配置表在哪个数据库中，表名称是什么</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.actual-data-nodes</span><span class="token punctuation">=</span><span class="token value attr-value">ds1.orders_$-&gt;{1..2}</span>
<span class="token comment">#指定orders表里主键id生成策略</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">SNOWFLAKE</span>

<span class="token comment">#指定分片策略。根据id的奇偶性来判断插入到哪个表</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.table-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.table-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">orders_\${id%2+1}</span>

<span class="token comment">#打开sql输出日志</span>
<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7、创建测试类" tabindex="-1"><a class="header-anchor" href="#_7、创建测试类"><span>7、创建测试类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ShardingsphereDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrdersMapper</span> ordersMapper<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Orders</span> orders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Orders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setCustomerId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setOrderType</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span><span class="token number">1000.0</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ordersMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>orders<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Orders</span> orders <span class="token operator">=</span> ordersMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>orders<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、sharding-jdbc实现水平分库" tabindex="-1"><a class="header-anchor" href="#_3、sharding-jdbc实现水平分库"><span>3、sharding-jdbc实现水平分库</span></a></h3><h4 id="_1、在不同的数据节点node01-node02上创建不同名称的数据库-sharding-sphere-1-sharding-sphere-2" tabindex="-1"><a class="header-anchor" href="#_1、在不同的数据节点node01-node02上创建不同名称的数据库-sharding-sphere-1-sharding-sphere-2"><span>1、在不同的数据节点node01,node02上创建不同名称的数据库：sharding_sphere_1,sharding_sphere_2</span></a></h4><h4 id="_2、在两个数据库上创建相同的表orders-1-orders-2" tabindex="-1"><a class="header-anchor" href="#_2、在两个数据库上创建相同的表orders-1-orders-2"><span>2、在两个数据库上创建相同的表orders_1,orders_2</span></a></h4><h4 id="_3、分片规则-按照customer-id的奇偶性来进行分库-然后按照id的奇偶性进行分表" tabindex="-1"><a class="header-anchor" href="#_3、分片规则-按照customer-id的奇偶性来进行分库-然后按照id的奇偶性进行分表"><span>3、分片规则，按照customer_id的奇偶性来进行分库，然后按照id的奇偶性进行分表</span></a></h4><h4 id="_4、修改配置文件" tabindex="-1"><a class="header-anchor" href="#_4、修改配置文件"><span>4、修改配置文件</span></a></h4><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 配置不同的数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">ds1,ds2</span>

<span class="token comment">#配置ds1数据源的基本信息</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/sharding_sphere_1?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置ds2数据源的基本信息</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.123.111:3306/sharding_sphere_2?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#指定数据库的分布情况</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.actual-data-nodes</span><span class="token punctuation">=</span><span class="token value attr-value">ds$-&gt;{1..2}.orders_$-&gt;{1..2}</span>

<span class="token comment">#指定orders表的主键生成策略</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">SNOWFLAKE</span>

<span class="token comment">#指定表分片策略，根据id的奇偶性来添加到不同的表中</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.table-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.table-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">orders_$-&gt;{id%2+1}</span>

<span class="token comment">#指定库分片策略，根据customer_id的奇偶性来添加到不同的库中</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.database-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">customer_id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.orders.database-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">ds$-&gt;{customer_id%2+1}</span>

<span class="token comment">#打开sql输出日志</span>
<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、修改mapper类" tabindex="-1"><a class="header-anchor" href="#_5、修改mapper类"><span>5、修改mapper类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrdersMapper</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into orders(id,order_type,customer_id,amount) values(#{id},#{orderType},#{customerId},#{amount})&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Orders</span> orders<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from orders where id = #{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;orderType&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;order_type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;customerId&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;customer_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Orders</span> <span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from orders where id = #{id} and customer_id=#{customerId}&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;orderType&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;order_type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;customerId&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;customer_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">&quot;amount&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Orders</span> <span class="token function">selectOneDB</span><span class="token punctuation">(</span><span class="token class-name">Orders</span> orders<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、编写测试类" tabindex="-1"><a class="header-anchor" href="#_6、编写测试类"><span>6、编写测试类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ShardingsphereDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrdersMapper</span> ordersMapper<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addOrdersDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Orders</span> orders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Orders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setCustomerId</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setOrderType</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            orders<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span><span class="token number">1000.0</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ordersMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>orders<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryOrdersDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Orders</span> orders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Orders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orders<span class="token punctuation">.</span><span class="token function">setCustomerId</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orders<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Orders</span> o <span class="token operator">=</span> ordersMapper<span class="token punctuation">.</span><span class="token function">selectOneDB</span><span class="token punctuation">(</span>orders<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、sharding-jdbc实现垂直分库" tabindex="-1"><a class="header-anchor" href="#_4、sharding-jdbc实现垂直分库"><span>4、sharding-jdbc实现垂直分库</span></a></h3><h4 id="_1、在不同的数据节点node01-node02创建相同的库sharding-sphere" tabindex="-1"><a class="header-anchor" href="#_1、在不同的数据节点node01-node02创建相同的库sharding-sphere"><span>1、在不同的数据节点node01,node02创建相同的库sharding_sphere</span></a></h4><h4 id="_2、在node01上创建orders表-在node02上创建customer表" tabindex="-1"><a class="header-anchor" href="#_2、在node01上创建orders表-在node02上创建customer表"><span>2、在node01上创建orders表，在node02上创建customer表</span></a></h4><h4 id="_3、分片规则-将不同的表插入到不同的库中" tabindex="-1"><a class="header-anchor" href="#_3、分片规则-将不同的表插入到不同的库中"><span>3、分片规则：将不同的表插入到不同的库中</span></a></h4><h4 id="_4、编写customer类" tabindex="-1"><a class="header-anchor" href="#_4、编写customer类"><span>4、编写customer类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、编写customermapper类" tabindex="-1"><a class="header-anchor" href="#_5、编写customermapper类"><span>5、编写customerMapper类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CustomerMapper</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into customer(id,name) values(#{id},#{name})&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertCustomer</span><span class="token punctuation">(</span><span class="token class-name">Customer</span> customer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、修改配置文件" tabindex="-1"><a class="header-anchor" href="#_6、修改配置文件"><span>6、修改配置文件</span></a></h4><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#配置数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">ds1,ds2</span>
<span class="token comment">#配置第一个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/sharding_sphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置第二个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.123.111:3306/sharding_sphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置orders表所在的数据节点</span>
<span class="token comment">#spring.shardingsphere.sharding.tables.order.actual-data-nodes=ds1.orders</span>

<span class="token comment">#配置customer表所在的数据节点</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.customer.actual-data-nodes</span><span class="token punctuation">=</span><span class="token value attr-value">ds2.customer</span>
<span class="token comment">#customer表的主键生成策略</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.customer.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.customer.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">SNOWFLAKE</span>
<span class="token comment">#指定分片的策略</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.customer.table-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.customer.table-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">customer</span>

<span class="token comment">#显示sql</span>
<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7、编写测试类" tabindex="-1"><a class="header-anchor" href="#_7、编写测试类"><span>7、编写测试类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ShardingsphereDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CustomerMapper</span> customerMapper<span class="token punctuation">;</span>
  
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertCustomer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Customer</span> customer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Customer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            customer<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            customer<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;zs&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            customerMapper<span class="token punctuation">.</span><span class="token function">insertCustomer</span><span class="token punctuation">(</span>customer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、sharding-jdbc公共表" tabindex="-1"><a class="header-anchor" href="#_5、sharding-jdbc公共表"><span>5、sharding-jdbc公共表</span></a></h3><p>在shardingsphere中有一种概念叫做公共表，也就是需要在各个库中都存在的表，方便做某些关联查询。</p><h4 id="_1、在不同节点的库上创建相同的表" tabindex="-1"><a class="header-anchor" href="#_1、在不同节点的库上创建相同的表"><span>1、在不同节点的库上创建相同的表</span></a></h4><h4 id="_2、分片规则-公共表表示所有的库都具备相同的表" tabindex="-1"><a class="header-anchor" href="#_2、分片规则-公共表表示所有的库都具备相同的表"><span>2、分片规则：公共表表示所有的库都具备相同的表</span></a></h4><h4 id="_3、创建实体类" tabindex="-1"><a class="header-anchor" href="#_3、创建实体类"><span>3、创建实体类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DictOrderType</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> orderType<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、创建dictordertypemapper文件" tabindex="-1"><a class="header-anchor" href="#_4、创建dictordertypemapper文件"><span>4、创建DictOrderTypeMapper文件</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DictOrderTypeMapper</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into dict_order_type(id,order_type) values(#{id},#{orderType})&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertDictOrderType</span><span class="token punctuation">(</span><span class="token class-name">DictOrderType</span> dictOrderType<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">&quot;delete from dict_order_type where id = #{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">DeleteDictOrderType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、修改配置文件" tabindex="-1"><a class="header-anchor" href="#_5、修改配置文件"><span>5、修改配置文件</span></a></h4><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#配置数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">ds1,ds2</span>
<span class="token comment">#配置第一个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/sharding_sphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置第二个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.123.111:3306/sharding_sphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置公共表</span>
<span class="token key attr-name">spring.shardingsphere.sharding.broadcast-tables</span><span class="token punctuation">=</span><span class="token value attr-value">dict_order_type</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.dict_order_type.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">id</span>
<span class="token key attr-name">spring.shardingsphere.sharding.tables.dict_order_type.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">SNOWFLAKE</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、编写测试类-1" tabindex="-1"><a class="header-anchor" href="#_6、编写测试类-1"><span>6、编写测试类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ShardingsphereDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">DictOrderTypeMapper</span> dictOrderTypeMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertDictOrderType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">DictOrderType</span> dictOrderType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DictOrderType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dictOrderType<span class="token punctuation">.</span><span class="token function">setOrderType</span><span class="token punctuation">(</span><span class="token string">&quot;orderType&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dictOrderTypeMapper<span class="token punctuation">.</span><span class="token function">insertDictOrderType</span><span class="token punctuation">(</span>dictOrderType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteDictOrderType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name"><span class="token namespace">dictOrderTypeMapper<span class="token punctuation">.</span></span>DeleteDictOrderType</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、sharding-jdbc实现读写分离" tabindex="-1"><a class="header-anchor" href="#_6、sharding-jdbc实现读写分离"><span>6、sharding-jdbc实现读写分离</span></a></h3><p>读写分离的概念大家应该已经很熟练了，此处不在赘述，下面我们通过sharding-jdbc来实现读写分离，其实大家应该已经发现了，所有的操作都是配置问题，下面我们来讲一下具体的配置。</p><h4 id="_1、我们规定ds1为写库-ds2为读库" tabindex="-1"><a class="header-anchor" href="#_1、我们规定ds1为写库-ds2为读库"><span>1、我们规定ds1为写库，ds2为读库</span></a></h4><h4 id="_2、创建person类" tabindex="-1"><a class="header-anchor" href="#_2、创建person类"><span>2、创建person类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、创建personmapper类" tabindex="-1"><a class="header-anchor" href="#_3、创建personmapper类"><span>3、创建personMapper类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PersonMapper</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into person(id,name) values(#{id},#{name})&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertPerson</span><span class="token punctuation">(</span><span class="token class-name">Person</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from person where id = #{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">queryPerson</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、修改配置文件-1" tabindex="-1"><a class="header-anchor" href="#_4、修改配置文件-1"><span>4、修改配置文件</span></a></h4><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment">#配置数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">ds1,ds2</span>
<span class="token comment">#配置第一个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/shardingsphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds1.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#配置第二个数据源</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.123.111:3306/shardingsphere?serverTimezone=UTC</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.shardingsphere.datasource.ds2.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>

<span class="token comment">#主库从库逻辑定义</span>
<span class="token key attr-name">spring.shardingsphere.masterslave.name</span><span class="token punctuation">=</span><span class="token value attr-value">ms</span>
<span class="token key attr-name">spring.shardingsphere.masterslave.master-data-source-name</span><span class="token punctuation">=</span><span class="token value attr-value">ds1</span>
<span class="token key attr-name">spring.shardingsphere.masterslave.slave-data-source-names</span><span class="token punctuation">=</span><span class="token value attr-value">ds2</span>

<span class="token comment">#显示执行的sql</span>
<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、编写测试类" tabindex="-1"><a class="header-anchor" href="#_5、编写测试类"><span>5、编写测试类</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ShardingsphereDemoApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">PersonMapper</span> personMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1l</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        personMapper<span class="token punctuation">.</span><span class="token function">insertPerson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Person</span> person <span class="token operator">=</span> personMapper<span class="token punctuation">.</span><span class="token function">queryPerson</span><span class="token punctuation">(</span><span class="token number">1l</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","Sharding-JDBC的简单使用.html.vue"]]),k=JSON.parse('{"path":"/%E4%B8%AD%E9%97%B4%E4%BB%B6/Sharding/Sharding-JDBC%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.html","title":"Sharding-JDBC的简单使用","lang":"zh-CN","frontmatter":{"description":"Sharding-JDBC的简单使用 1、创建一个springboot项目 2、导入如下依赖 2、sharding-jdbc实现水平分表 1、创建sharding_sphere数据库 2、在数据库中创建两张表，orders_1和orders_2 3、分片规则：如果订单编号是偶数添加到orders_1,如果是奇数添加到orders_2 4、创建实体类 5...","head":[["meta",{"property":"og:url","content":"https://maijunxuan.cn/%E4%B8%AD%E9%97%B4%E4%BB%B6/Sharding/Sharding-JDBC%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"麦俊轩的博客"}],["meta",{"property":"og:title","content":"Sharding-JDBC的简单使用"}],["meta",{"property":"og:description","content":"Sharding-JDBC的简单使用 1、创建一个springboot项目 2、导入如下依赖 2、sharding-jdbc实现水平分表 1、创建sharding_sphere数据库 2、在数据库中创建两张表，orders_1和orders_2 3、分片规则：如果订单编号是偶数添加到orders_1,如果是奇数添加到orders_2 4、创建实体类 5..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-19T15:32:06.000Z"}],["meta",{"property":"article:author","content":"maijunxuan"}],["meta",{"property":"article:modified_time","content":"2022-09-19T15:32:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sharding-JDBC的简单使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-09-19T15:32:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"maijunxuan\\",\\"email\\":\\"maijunxuan0309@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"1、创建一个springboot项目","slug":"_1、创建一个springboot项目","link":"#_1、创建一个springboot项目","children":[]},{"level":3,"title":"2、导入如下依赖","slug":"_2、导入如下依赖","link":"#_2、导入如下依赖","children":[]},{"level":3,"title":"2、sharding-jdbc实现水平分表","slug":"_2、sharding-jdbc实现水平分表","link":"#_2、sharding-jdbc实现水平分表","children":[]},{"level":3,"title":"3、sharding-jdbc实现水平分库","slug":"_3、sharding-jdbc实现水平分库","link":"#_3、sharding-jdbc实现水平分库","children":[]},{"level":3,"title":"4、sharding-jdbc实现垂直分库","slug":"_4、sharding-jdbc实现垂直分库","link":"#_4、sharding-jdbc实现垂直分库","children":[]},{"level":3,"title":"5、sharding-jdbc公共表","slug":"_5、sharding-jdbc公共表","link":"#_5、sharding-jdbc公共表","children":[]},{"level":3,"title":"6、sharding-jdbc实现读写分离","slug":"_6、sharding-jdbc实现读写分离","link":"#_6、sharding-jdbc实现读写分离","children":[]}],"git":{"createdTime":1663601526000,"updatedTime":1663601526000,"contributors":[{"name":"MJX","email":"1585225345@qq.com","commits":1}]},"readingTime":{"minutes":5.31,"words":1593},"filePathRelative":"中间件/Sharding/Sharding-JDBC的简单使用.md","localizedDate":"2022年9月19日","excerpt":"\\n<h3>1、创建一个springboot项目</h3>\\n<h3>2、导入如下依赖</h3>\\n<div class=\\"language-xml\\" data-ext=\\"xml\\" data-title=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>org.apache.shardingsphere<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>sharding-jdbc-spring-boot-starter<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>4.1.1<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>version</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
